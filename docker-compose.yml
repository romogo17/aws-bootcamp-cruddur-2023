version: "3.8"
services:
  envoy:
    build: ./envoy
    ports:
      - "8800:8800"
      - "8081:8001"
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
  authz:
    build: ./cognito-authz
    expose:
      - "8123"
    ports:
      - "8123:8123"
    environment:
      AWS_COGNITO_USER_POOL_ID: "${AWS_USER_POOLS_ID}"
      AWS_COGNITO_USER_POOL_CLIENT_ID: "${AWS_USER_POOLS_WEB_CLIENT_ID}"
  backend-flask:
    environment:
      # DynamoDB
      # AWS_ENDPOINT_URL: "http://dynamodb-local:8000"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"

      # Gitpod
      # FRONTEND_URL: "https://3000-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}"
      # BACKEND_URL: "https://4567-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}"

      # Codespaces
      FRONTEND_URL: "https://${CODESPACE_NAME}-3000.${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}"
      BACKEND_URL: "https://${CODESPACE_NAME}-4567.${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}"

      # DB
      # CONNECTION_URL: "${CONTAINER_DB_CONNECTION_URL}"
      CONNECTION_URL: "${REMOTE_DB_CONNECTION_URL}"

      # Rollbar
      ROLLBAR_ACCESS_TOKEN: "${ROLLBAR_ACCESS_TOKEN}"
      OTEL_SERVICE_NAME: "cruddur-backend-flask"
      OTEL_EXPORTER_OTLP_ENDPOINT: "https://api.honeycomb.io"
      OTEL_EXPORTER_OTLP_HEADERS: "x-honeycomb-team=${HONEYCOMB_API_KEY}"

      # AWS - XRay, Cognito, etc
      # AWS_XRAY_URL: "*4567-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}*"
      AWS_XRAY_URL: "*${CODESPACE_NAME}-4567.${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}*"
      AWS_XRAY_DAEMON_ADDRESS: "xray-daemon:2000"
      AWS_XRAY_SDK_ENABLED: false
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION}"
      AWS_COGNITO_USER_POOL_ID: "${AWS_USER_POOLS_ID}"
      AWS_COGNITO_USER_POOL_CLIENT_ID: "${AWS_USER_POOLS_WEB_CLIENT_ID}"
    build: ./backend-flask
    ports:
      - "4567:4567"
    volumes:
      - ./backend-flask:/backend-flask
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -X GET http://localhost:4567/api/health-check -H 'Accept: application/json' -H 'Content-Type: application/json'"
        ]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 30s

  frontend-react-js:
    environment:
      # REACT_APP_BACKEND_URL: "https://${CODESPACE_NAME}-4567.${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}"
      REACT_APP_BACKEND_URL: "https://${CODESPACE_NAME}-8800.${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}" # envoy proxy
      REACT_APP_OTEL_COLLECTOR_URL: "https://${CODESPACE_NAME}-4318.${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}"
      REACT_APP_AWS_PROJECT_REGION: "${AWS_DEFAULT_REGION}"
      REACT_APP_AWS_COGNITO_REGION: "${AWS_DEFAULT_REGION}"
      REACT_APP_AWS_USER_POOLS_ID: "${AWS_USER_POOLS_ID}"
      REACT_APP_AWS_USER_POOLS_WEB_CLIENT_ID: "${AWS_USER_POOLS_WEB_CLIENT_ID}"
    build: ./frontend-react-js
    ports:
      - "3000:3000"
    volumes:
      - ./frontend-react-js:/frontend-react-js
  otel-collector:
    image: otel/opentelemetry-collector
    command: [ --config=/etc/otel-collector-config.yaml ]
    environment:
      HTTP_FRONTEND_URL: "http://${CODESPACE_NAME}-3000.${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}"
      HTTPS_FRONTEND_URL: "https://${CODESPACE_NAME}-3000.${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}"
      HONEYCOMB_API_KEY: "${HONEYCOMB_API_KEY}"
    volumes:
      - ./frontend-react-js/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - 4318:4318 # OTLP http receiver
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=cruddur
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
  dynamodb-local:
    # https://stackoverflow.com/questions/67533058/persist-local-dynamodb-data-in-volumes-lack-permission-unable-to-open-databa
    # We needed to add user:root to get this working.
    user: root
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    ports:
      - "8000:8000"
    volumes:
      - ddb:/home/dynamodblocal/data
    working_dir: /home/dynamodblocal
  xray-daemon:
    image: "amazon/aws-xray-daemon"
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_REGION: "us-east-1"
    command:
      - "xray -o -b xray-daemon:2000"
    ports:
      - 2000:2000/udp

volumes:
  db:
    driver: local
  ddb:
    driver: local

# the name flag is a hack to change the default prepend folder
# name when outputting the image names
networks:
  internal-network:
    driver: bridge
    name: cruddur
